@model ObliGaitanBordaAnon.Models.OrdenDetalle

@{
    ViewData["Title"] = "Edit";
}

<h1>Editar detalles de la orden</h1>

<h4>Detalles de la orden</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="OrdenId" class="control-label">Id de la orden:</label>
                <select asp-for="OrdenId" class="form-control" asp-items="ViewBag.OrdenId"></select>
                <span asp-validation-for="OrdenId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MenuId" class="control-label">Menu:</label>
                <select asp-for="MenuId" class="form-control" asp-items="ViewBag.MenuId"></select>
                <span asp-validation-for="MenuId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cantidad" class="control-label">Cantidad de menu:</label>
                <input type="number" asp-for="Cantidad" class="form-control" />
                <span asp-validation-for="Cantidad" class="text-danger"></span>
            </div>
            <div class="form-group">
                <hr />
                <input type="submit" value="Guardar" class="btn btn-success" />
                <a class="btn btn-secondary" asp-action="Index">Volver a la lista</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
